"TonUtil.fif" include
"Asm.fif" include


"EQDlT07NpSh0uj-aSBkF2TRxOqR2nw0ErOQsA6TYakr1-FxP" constant owner_address // Specify your own
"EQDlT07NpSh0uj-aSBkF2TRxOqR2nw0ErOQsA6TYakr1-FxP" constant next_admin_address // Specify your own
"https://raw.githubusercontent.com/Trinketer22/token-contract/main/ft/web-example/test_jetton.json" constant jetton_meta // Specify your own
"build/jetton-wallet.fif" constant wallet_code_path
99033072163855895282355925254055538851718711192606356404253983347998511433351 constant merkle_root
1000000000 100 * constant jetton_supply // Starting jetton supply

<b
  0 8 u, // On-chain token and TODO: semi-token with dict
  jetton_meta
  $>B B,
b>

next_admin_address
$>smca 0= abort"Specify valid next admin addr"
drop // Drop flags

owner_address
$>smca 0= abort"Specify valid admin addr"
drop // Drop flags

<b
  jetton_supply Gram, // total supply
  -rot Addr,  //  admin address
  -rot Addr,  //  admin address
  wallet_code_path include // Loading jetton code
  over tuple? { nip } if // In testing mode (asm-mode 3) include returns ( cell, tuple ) we don't want tuple in the cell
  ref,   //   code cell
  swap ref, // meta cell
  merkle_root 256 u, // merkle root
b>

